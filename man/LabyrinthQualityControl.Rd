% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/labyrinth.R
\name{LabyrinthQualityControl}
\alias{LabyrinthQualityControl}
\title{Ensure quality of imputed calls}
\usage{
LabyrinthQualityControl(vcf, out.file, min.posterior, parallel = TRUE,
  cores = 4)
}
\arguments{
\item{vcf}{File path or vcfR object to impute.}

\item{out.file}{File path of output file.}

\item{min.posterior}{Numeric specifying the minimum probability for any call
that is kept.}

\item{parallel}{Logical indicating if imputation should be run in
parallel or serial.}

\item{cores}{Numeric indicating how many subprocesses should be
spawned if running in parallel.}
}
\value{
A vcfR object with all low probability sites removed.
}
\description{
LaByRInth will impute every site for every member of the population and
include a marginal posterior, so any calls with too low of a posterior
probability will be removed (i.e. a site for a population member that was
called with low probability of correctness will be "uncalled").
}
\examples{
input <- system.file(
    "extdata",
    "vcf-files",
    "progeny-lakin-fuller-sample.vcf",
    package = "LaByRInth",
    mustWork = TRUE)
output <- tempfile(fileext="-quality-result.vcf.gz")
print(output)
result <- LabyrinthQualityControl(
    vcf = input,
    out.file = output,
    min.posterior = 0.8,
    parallel = FALSE,
    cores = 1)
}
\author{
Jason Vander Woude
}
