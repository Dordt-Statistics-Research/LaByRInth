% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/labyrinth.R
\name{LabyrinthImputeProgeny}
\alias{LabyrinthImputeProgeny}
\title{Offspring imputation}
\usage{
LabyrinthImputeProgeny(parental, out.file, use.fwd.bkwd = TRUE,
  calc.posteriors = TRUE, viterbi.threshold = 0.001, parallel = TRUE,
  cores = 4)
}
\arguments{
\item{parental}{An object of class parental.imputation (a result of the
LabyrinthParentalImputation function) which will contain information
about the population including the parental imputation information.}

\item{out.file}{File path of output file.}

\item{use.fwd.bkwd}{Logical indicating if the forward-backward algorithm or
the Viterbi algorithm should be used to find the optimal solution to
the hidden Markov model (HMM); use of the Viterbi algorithm is highly
discouraged because theory suggests the forward-backward algorithm
should outperform it, and testing of the Viterbi implementation was
only cursory.}

\item{calc.posteriors}{Logical indicating if marginal posterior
probabilities should be calculated for every imputation call made. If
the forward-backward algorithm is used, these probabilities must be
computed, so this parameter is only meaningful if the Viterbi
algorithm is used in which case the forward-backward algorithm is run
in the background with the sole purpose of computing these posterior
probabilities.}

\item{viterbi.threshold}{Numeric indicating at what threshold probability
sites should be left uncalled instead of imputed.}

\item{parallel}{Logical indicating if imputation should be run in parallel
or serial.}

\item{cores}{Numeric indicating how many subprocesses should be spawned if
running in parallel.}
}
\value{
A vcfR object with both parents and progeny imputed.
}
\description{
Imputes all of the progeny (offspring).
}
\examples{
input <- system.file(
    "extdata",
    "vcf-files",
    "parental-lakin-fuller-sample.rds",
    package = "LaByRInth",
    mustWork = TRUE)
output <- tempfile(fileext="-progeny-result.vcf.gz")
print(output)
result <- LabyrinthImputeProgeny(
    parental = input,
    out.file = output,
    parallel = FALSE,
    cores = 1)
}
\author{
Jason Vander Woude
}
